
//delete anything that gets duplicated above this line

$theme-ignore-duplication-warnings: true; //ignore warnings



// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming'; 
// Plus imports for other components in your app.
@import "theme_variables.scss";

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/




/*
@import 'themes';
// Define the light theme.
$primary: mat-palette($mat-deep-purple);
$accent: mat-palette($mat-amber, A200, A100, A400);
$theme: mat-light-theme($primary, $accent);
@include angular-material-theme($theme);
@include material-custom-theme($theme);
*/


$nudg-primary: mat-palette($mat-indigo);
$nudg-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$nudg-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$nudg-theme: mat-light-theme((
  color: (
    primary: $nudg-primary,
    accent: $nudg-accent,
    warn: $nudg-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($nudg-theme);






/*
$redPalette                mat-red);
$pinkPalette                mat-pink);
$purplePalette                mat-purple);
$deep-purplePalette                mat-deep-purple);
$indigoPalette                mat-indigo);
$bluePalette                mat-blue);
$light-bluePalette                mat-light-blue);
$cyanPalette                mat-cyan);
$tealPalette                mat-teal);
$greenPalette                mat-green);
$light-greenPalette                mat-light-green);
$limePalette                mat-lime);
$yellowPalette                mat-yellow);
$amberPalette                mat-amber);
$orangePalette                mat-orange);
$deep-orangePalette                mat-deep-orange);
$brownPalette                mat-brown);
$greyPalette                mat-grey);
$blue-greyPalette                mat-blue-grey);
*/

//<!-- THEME 4 -->


$red-theme: mat-dark-theme((
  color: (
    primary: $redPalette,
    accent: $orangePalette,
    warn: $yellowPalette,
    textColor : white


  )
));
$dark-blue-theme: mat-light-theme((
 color: (
   primary: $blue4,
   accent: $blue2,
   warn : $blue3,
   themeBackground : $blue1,
   textColor : define-palette(white),
 ),
 textColor : define-palette(white),



));
$green-theme: mat-light-theme((
 color: (
   primary: $greenPalette,
   accent: $light-greenPalette,
   warn : $tealPalette

 )
));
$purple-theme: mat-dark-theme((
 color: (
   primary: $deep-purplePalette,
   accent: $purplePalette,
   warn: $bluePalette
 )
));

$yellow-theme: mat-dark-theme((
 color: (
   primary: $yellow1,
   accent: $yellow2,
   warn: $yellow3
 )
));

$light-red-theme: mat-dark-theme((
 color: (
   primary: $red1,
   accent: $red2,
   warn: $red3,
   textColor : define-palette(black),
 ),

 textColor:black
 
));

$orange-theme: mat-dark-theme((
 color: (
   primary: $orange1,
   accent: $orange2,
   warn: $orange3
 )
));

$light-green-theme: mat-dark-theme((
 color: (
   primary: $light-Green1,
   accent: $light-Green2,
   warn: $light-Green3
 )
));

$light-blue-theme: mat-dark-theme((
 color: (
   primary: $lightblue1,
   accent: $lightblue2,
   warn: $lightblue3
 )
));

//@include custom-components-theme($light-red-theme, #ecadad, #db6b6b, #ad0000, black); //Second argument is primary color, third argument is accent color.


@mixin applyWhiteForeground($theme){
  $custom-foreground-color: #ffffff;

  $foreground: map-get($theme, foreground);
  $foreground: map_merge($foreground, (foreground: $custom-foreground-color));
  $theme: map_merge($theme, (foreground: $foreground));
}

@import 'app/policy-board/policy-board.component.scss';

// Apply the nudg theme by default
@include angular-material-theme($nudg-theme);

@mixin expansion-panel-mixin($theme, $theme-primary, $theme-accent, $theme-warn, $textColor) {

  .mat-expansion-panel:nth-child(2n){
    background-color: $theme-primary;
   
  }
  .mat-expansion-panel:nth-child(2n+1){
      background-color:  $theme-accent;
      color: $textColor;
  }


}

@mixin list-mixin($theme, $theme-primary, $theme-accent, $theme-warn, $textColor) {


  .notHeaderRow{
    color:$textColor;
  }

  .headerRow{
    background-color: $theme-primary;
    color : $textColor;
  }

  .mat-list-base .mat-list-item {
    color: $textColor
}

}



    @mixin custom-components-theme($theme, $theme-primary, $theme-accent, $theme-warn, $textColor ) {
      @include expansion-panel-mixin($theme, $theme-primary, $theme-accent, $theme-warn, $textColor);
      @include list-mixin($theme, $theme-primary, $theme-accent, $theme-warn, $textColor);
      @include angular-material-theme($theme);
    
    }

    @mixin second-custom-thing($theme, $theme-primary, $theme-accent, $theme-warn, $textColor ) {
      @include expansion-panel-mixin($theme, $theme-primary, $theme-accent, $theme-warn, $textColor);
      @include list-mixin($theme, $theme-primary, $theme-accent, $theme-warn, $textColor);
      @include applyWhiteForeground($theme);
      @include angular-material-theme($theme);
    }

.red {
  @include custom-components-theme($red-theme, #e68080, #b38080, #ad0000, white); //Second argument is primary color, third argument is accent color.
}
.darkBlue {

  //#1a55a4
  @include second-custom-thing($dark-blue-theme, #073763, #72a3d8, #ffffff, white ); //Second argument is primary color, third argument is accent color. fourth is warn
} 
.green {

  @include custom-components-theme($green-theme, green, #80b569, #274e13, black); //Second argument is primary color, third argument is accent color.

}
.purple {
  @include custom-components-theme($purple-theme, #673ab7, #9c27b0, #2196f3, white); //Second argument is primary color, third argument is accent color.

} 

.yellow {

  @include custom-components-theme($purple-theme, #ffe8ad, #f8e199, #e79f13, black); //Second argument is primary color, third argument is accent color.

}

.light-red {
  //ad0000
  @include custom-components-theme($light-red-theme, #ecadad, #db6b6b, black, black); //Second argument is primary color, third argument is accent color.


}

.orange {
  @include custom-components-theme($orange-theme, #fad3ae, #f5ac6e, #d56217, black); //Second argument is primary color, third argument is accent color.
}

.light-green {
@include custom-components-theme($light-green-theme, #c0dbb7, #8ebe7d, #3c7d26, black ); //Second argument is primary color, third argument is accent color.

}

.light-blue {

  @include custom-components-theme($light-blue-theme, #b3cbd0, #467986, #467986, black); //Second argument is primary color, third argument is accent color.

}

//Got dark theme to apply. Careful with material angular version, 11 uses one syntax, 12 uses another. we are on 11, but I think i need to update
//to 12 to make custom pallettes, idk see tomorrow.
